LINUX DEVICE DRIVER

In linux device driver book,
http://makelinux.com/ldd3/?u=chp-2-sect-4
or
http://lwn.net/Kernel/LDD3/

The goal of chapter 3 is to write a complete char device driver. We develop a character driver because this class is suitable for most simple hardware devices. Char
drivers are also easier to understand than block drivers or network drivers (which we
get to in later chapters). Our ultimate aim is to write a modularized char driver, but
we won’t talk about modularization issues in this chapter.
Throughout the chapter, we present code fragments extracted from a real device
driver: scull (Simple Character Utility for Loading Localities). scull is a char driver
that acts on a memory area as though it were a device. In this chapter, because of
that peculiarity of scull, we use the word device interchangeably with “the memory
area used by scull.”
The advantage of scull is that it isn’t hardware dependent. scull just acts on some
memory, allocated from the kernel. Anyone can compile and run scull, and scull is
portable across the computer architectures on which Linux runs. On the other hand,
the device doesn’t do anything “useful” other than demonstrate the interface
between the kernel and char drivers and allow the user to run some tests.

This folder contain files that are explained in this chapter, but if the files are directly downloaded from the source, they are written for old kernel versions and the make command gives compilation errors. Two types of fixes are necessary
1) some errors can be fixed in the scull source files
2) some errors must be fixed in the linux kernel source

This folder contain files that are modified for kernel 3.0, some of the kernel files fixtures must be referenced to my blog 
http://fun-with-bicepjai.blogspot.com/2011/07/make-scull-driver-successfully-with.html

Thanks enjoy and let the linux grow